name: Firebase Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  firebase-tests:
    name: Firebase Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable' 

      - name: Install dependencies
        run: flutter pub get
        
      - name: Setup Firebase Test Configuration
        run: |
          echo "Creating temporary Firebase configuration for tests"
          mkdir -p android/app
          cat > android/app/google-services.json << 'EOL'
          {
            "project_info": {
              "project_number": "000000000000",
              "project_id": "test-astroyorumai",
              "storage_bucket": "test-astroyorumai.appspot.com"
            },
            "client": [
              {
                "client_info": {
                  "mobilesdk_app_id": "1:000000000000:android:0000000000000000",
                  "android_client_info": {
                    "package_name": "com.astroyorumai.app.test"
                  }
                },
                "api_key": [{"current_key": "test_api_key"}],
                "services": {
                  "appinvite_service": {
                    "other_platform_oauth_client": []
                  }
                }
              }
            ]
          }
          EOL
          
      - name: Create Test Environment File
        run: |
          echo "Creating test environment file"
          cat > lib/firebase_options_test.dart << 'EOL'
          // Test configuration for Firebase tests in CI
          import 'package:firebase_core/firebase_core.dart';
          
          class FirebaseOptionsTest {
            static FirebaseOptions get currentPlatform {
              return const FirebaseOptions(
                apiKey: 'test-api-key',
                appId: '1:000000000000:android:0000000000000000',
                messagingSenderId: '000000000000',
                projectId: 'test-astroyorumai',
                storageBucket: 'test-astroyorumai.appspot.com',
              );
            }
          }
          EOL
          
      - name: Mock Firebase Services
        run: |
          # Create temp directory for Firebase emulator configs
          mkdir -p firebase-emulator-data

      - name: Start Firebase Emulators
        run: |
          npm install -g firebase-tools
          # Start emulators in background with data directory
          firebase emulators:start --project demo-astroyorumai --only auth,firestore --no-ui &
          # Wait for emulators to start
          sleep 10

      - name: Run Firebase Tests
        run: |
          # Set test environment variables for Firebase emulator
          export FIREBASE_AUTH_EMULATOR_HOST="localhost:9099"
          export FIRESTORE_EMULATOR_HOST="localhost:8080"
          
          # Run tests with Firebase tags
          flutter test --tags=firebase --exclude-tags=integration

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: firebase-test-results
          path: firebase-test-results.json
